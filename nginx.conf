# Configuración de eventos para NGINX
events {
    worker_connections 1024; # Número máximo de conexiones simultáneas
}

# Configuración HTTP
http {
    # Define un servidor virtual
    server {
        listen 80; # NGINX escuchará en el puerto 80
        server_name localhost; # Nombre del servidor

        # Bloque para servir los archivos estáticos de tu frontend
        # Todas las peticiones que no coincidan con otro 'location' irán aquí
        location / {
            root /usr/share/nginx/html; # Directorio donde NGINX encontrará tus archivos HTML, CSS, JS
            index index.html index.htm; # Archivos de índice por defecto

            # Para aplicaciones Single Page Application (SPA) como React, Vue, Angular
            # Esto asegura que si una ruta no existe, NGINX sirva index.html
            try_files $uri $uri/ /index.html =404;
        }

        # Bloque para proxy-pasar las peticiones a tu API
        # Todas las peticiones que comiencen con /api/ serán redirigidas a tu backend
        location /api/ {
            # Opcional: Re-escribe la URL para eliminar '/api/' antes de enviarla al backend.
            # Por ejemplo, si el cliente pide /api/client/3, el backend recibirá /client/3.
            rewrite ^/api/(.*)$ /$1 break;

            # Redirige la petición al servicio 'app-temp' en el puerto 8000
            # 'app-temp' es el nombre del servicio en tu docker-compose.yml
            # y es accesible por nombre dentro de la red 'platzinet'.
            proxy_pass http://app-temp:8000;

            # Configura las cabeceras para que el backend reciba la información correcta del cliente
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
